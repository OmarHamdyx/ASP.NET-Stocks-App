@model CompanyOptionsViewModel
@{
    ViewBag.Title = "Explore";

}
<div class="mt-72 font-bold">
    <ul class="flex text-3xl">
        <li class="mr-6">
            <a asp-controller="StocksApp" asp-action="GetStockDetails" class="text-gray-800 hover:text-blue-800 dark:text-white">Trade</a>
        </li>
        <li class="mr-6">
            <a asp-controller="StocksApp" asp-action="GetOrders" class="text-gray-800 hover:text-blue-800 dark:text-white">Orders</a>
        </li>
        <li class="mr-6">
            <a asp-controller="StocksApp" asp-action="GetExplorePage" class="underline-offset-4 text-gray-800 underline hover:text-blue-800 dark:text-white">Explore</a>
        </li>
    </ul>
</div>
<div class="my-5 text-2xl text-gray-600 dark:text-white">Stocks <span class="text-3xl">▸ </span>Explore</div>

<div class="flex">
    <div class="w-[30rem] block rounded-lg border border-gray-500 bg-white p-6 shadow dark:bg-gray-800 dark:border-gray-700">
        <p class="font-bold text-gray-500">Stocks</p>
        @if (Model.CompanyNames is not null && Model.StockSymbols is not null)
        {
            for (int i = 0; i < Model.StockSymbols.Count; i++)
            {
                <div class="text-lg font-bold dark:text-white">@Model.CompanyNames[i]</div>
                <a asp-controller="StocksApp" asp-action="GetCompanyAndStockDetailsInExplore" asp-route-stockSymbol="@Model.StockSymbols[i]" class="underline-offset-4 pb-5 text-gray-500 hover:underline">(@Model.StockSymbols[i])</a>
            }
        }

    </div>

    @if (ViewBag.StockSymbol != null)
    {
        <div class="ml-[10rem]">
            @await Component.InvokeAsync("CompanyAndStockDetails", new { StockSymbol = ViewBag.StockSymbol })
        </div>
    }
</div>